var width = 416, height = 416, gLoop;
var ALT = 18, LEFT = 37, RIGHT = 39, UP = 38, DOWN = 40, SPEED = 75, CTRL = 17, keysDown = {};

addEventListener("keydown", function (e) { keysDown[e.keyCode] = true; }, false);
addEventListener("keyup", function (e) { delete keysDown[e.keyCode]; }, false);

var gameboard = document.getElementById("gameboard");
ctx = gameboard.getContext('2d');
gameboard.width = width;
gameboard.height = height;


function checkCollission(x1, y1, w1, h1, x2, y2, w2, h2) {
	this.leftCollider = 0, this.rightCollider = 0, this.upCollider = 0, this.downCollider = 0;
	
		ctx.strokeRect(x2,y2,w2,h2);
		ctx.strokeRect(x1,y1,w1,h1);
	
	return x1 < x2 + w2 && x1 + w1 > x2 && y1 < y2 + h2 && y1 + h1 > h2;
}


function inputHandle() {
    this.active = true;

    this.setActive = function (a) {
        this.active = a;
    }
    this.moviment = function () {
        if (this.active) {
            if (UP in keysDown && !(LEFT in keysDown) && !(RIGHT in keysDown)) { p.move(0, -1); p.direction = 'UP'; }
            if (DOWN in keysDown && !(LEFT in keysDown) && !(RIGHT in keysDown)) { p.move(0, 1); p.direction = 'DOWN'; }
            if (LEFT in keysDown) { p.move(-1, 0); p.direction = 'LEFT'; }
            if (RIGHT in keysDown) { p.move(1, 0); p.direction = 'RIGHT'; }
                
        }
    }
 } 



function map(){
    this.width = 416/ 32;
    this.height = 416 / 32;
    this.image = new Image();
    this.image.src = "images/tiles.png";

    this.bgImage = new Image();
    this.bgImage.src = "images/background.png";
 
    this.board = [  [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
                    [3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3],
                    [3, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 3],
                    [3, 1, 3, 1, 3, 2, 3, 1, 3, 1, 3, 1, 3],
                    [3, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 3],
                    [3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3],
                    [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
                    [3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3],
                    [3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3],
                    [3, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 3],
                    [3, 1, 1, 1, 1, 2, 15, 2, 1, 1, 1, 1, 3],
                    [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
                    ];
            

    this.getTile = function (tile) {
        if (tile != 0)
            ctx2.drawImage(this.image, tile*32, 0, 32, 32,  32,  32, 32, 32);
    }

    this.draw = function () {
        //Desenhar background
        
        ctx.drawImage(this.bgImage, 0, 0);
               
        for (var i = 0; i < this.height; i++)
             for (var j = 0; j < this.width; j++){
                //ctx.strokeRect(j*32,i*32,32,32);
                switch(this.board[i][j]){
                    case 3: ctx.drawImage(this.image, 64, 0, 32, 32, j * 32, i * 32, 32, 32); break;
                    case 2: ctx.drawImage(this.image, 32, 0, 32, 32, j * 32, i * 32, 32, 32); break;
                    case 1: ctx.drawImage(this.image, 0, 0, 32, 32, j * 32, i * 32, 32, 32); break;
                    case 15: ctx.drawImage(this.image, 14*32, 0, 32, 32, j * 32, i * 32, 32, 32); break;
                 }
             } 
                    
        }

}


function player(){
    this.image = new Image();
    this.image.src = "images/tiles.png";
    this.height = 32;
    this.width = 32;
    this.x = 96;
    this.y = 64;
    this.speed = 0.5;
    this.direction = 'UP';

    this.setPosition = function (x, y) {
        this.x = x;
        this.y = y;
    }
    this.move = function (x, y) {
        this.x += this.speed * x;
        this.y += this.speed * y;
    }
    this.draw = function () {
        switch (this.direction) {
            case 'UP': ctx.drawImage(this.image, this.width*0, this.height*6, this.width, this.height, this.x, this.y, 32, 32); break;
            case 'DOWN': ctx.drawImage(this.image, this.width * 0, this.height * 7, this.width, this.height, this.x, this.y, 32, 32); break;
            case 'LEFT': ctx.drawImage(this.image, this.width * 0, this.height * 8, this.width, this.height, this.x, this.y, 32, 32); break;
            case 'RIGHT': ctx.drawImage(this.image, this.width * 0, this.height * 9, this.width, this.height, this.x, this.y, 32, 32); break;
        }
    }
    
}

var i = new map();
var p = new player();
var input = new inputHandle();

function render() {
	ctx.clearRect(0, 0, width, height);
	i.draw();
	input.moviment();
	p.draw();
	
}

function gameLoop() {
    render();
    gLoop = setTimeout(gameLoop, 1000 / 50);
      
}
gameLoop();
